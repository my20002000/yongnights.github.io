<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>个人博客</title>
  
  <subtitle>记录工作中的点点滴滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yongnights.github.io/"/>
  <updated>2019-03-06T07:22:40.500Z</updated>
  <id>https://yongnights.github.io/</id>
  
  <author>
    <name>永夜初晗凝碧天</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo搭建教程(3)</title>
    <link href="https://yongnights.github.io/2019/03/06/Hexo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B-3/"/>
    <id>https://yongnights.github.io/2019/03/06/Hexo搭建教程-3/</id>
    <published>2019-03-06T06:28:14.000Z</published>
    <updated>2019-03-06T07:22:40.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h2><h2 id="1、hexo基本配置"><a href="#1、hexo基本配置" class="headerlink" title="1、hexo基本配置"></a>1、hexo基本配置</h2><pre><code>在文件根目录下的_config.yml，就是整个hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的配置描述。</code></pre><h3 id="1-网站"><a href="#1-网站" class="headerlink" title="1.网站"></a>1.网站</h3><p><img src="https://i.imgur.com/uzNRp60.png" alt></p><pre><code>description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。language可以用来解决菜单中文乱码，设置language字段如下:    language: zh-Hans 或者 anguage: zh-CN    取决于你的主题theme目录下的language目录下有zh-Hans.yml还是zh-CN.ymltimezone，东八区设置是 Asia/Shanghai</code></pre><h3 id="2-网址"><a href="#2-网址" class="headerlink" title="2.网址"></a>2.网址</h3><p><img src="https://i.imgur.com/DuDMHGc.png" alt></p><pre><code>在这里，你需要把url改成你的网站域名，也就是第一步仓库地址的那个，https://xxx.github.io/permalink，也就是你生成某个文章时的那个链接格式。比如我新建一个文章叫temp.md，那么这个时候他自动生成的地址就是http://yoursite.com/2018/09/05/temp。以下是官方给出的示例，关于链接的变量还有很多，需要的可以去官网上查找 永久链接 。</code></pre><p><img src="https://i.imgur.com/w9srSbP.png" alt>  </p><pre><code>网站存放在子目录如果您的网站存放在子目录中，例如 http://yoursite.com/blog，则请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。再往下翻，中间这些都默认就好了。theme: landscapetheme就是选择什么主题，也就是在theme这个文件夹下，在官网上有很多个主题，默认给你安装的是lanscape这个主题。当你需要更换主题时，在官网上下载，把主题的文件放在theme文件夹下，再修改这个参数就可以了。# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo: &lt;repository url&gt;  branch: [branch]deploy就是网站的部署的，repo就是仓库(Repository)的简写。branch选择仓库的哪个分支。而这个在后面进行双平台部署的时候会再次用到。</code></pre><h3 id="3-Front-matter"><a href="#3-Front-matter" class="headerlink" title="3.Front-matter"></a>3.Front-matter</h3><pre><code>Front-matter 是文件最上方以 --- 分隔的区域，用于指定个别文件的变量，举例来说：title: Hello Worlddate: 2013/7/13 20:46:25---下面这些是预先定义的参数，您可在模板中使用这些参数值并加以利用。</code></pre><p><img src="https://i.imgur.com/JO3DePn.png" alt></p><pre><code>其中，分类和标签需要区别一下，分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次。</code></pre><h3 id="4-layout-布局"><a href="#4-layout-布局" class="headerlink" title="4.layout(布局)"></a>4.layout(布局)</h3><pre><code>当你每一次使用代码:hexo new paper,它其实默认使用的是post这个布局，也就是在source文件夹下的_post里面。Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而您自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹。</code></pre><p><img src="https://i.imgur.com/BJqguol.png" alt></p><pre><code>而new这个命令其实是：hexo new [layout] &lt;title&gt;,只不过这个layout默认是post罢了。</code></pre><h3 id="5-page"><a href="#5-page" class="headerlink" title="5.page"></a>5.page</h3><pre><code>如果你想另起一页，那么可以使用:hexo new page board系统会自动给你在source文件夹下创建一个board文件夹，以及board文件夹中的index.md，这样你访问的board对应的链接就是http://xxx.xxx/board</code></pre><h3 id="6-draft"><a href="#6-draft" class="headerlink" title="6.draft"></a>6.draft</h3><pre><code>draft是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以:hexo new draft newpage这样会在source/_draft中新建一个newpage.md文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用:hexo server --draft,在本地端口中开启服务预览。如果你的草稿文件写完了，想要发表到post中，hexo publish draft newpage,就会自动把newpage.md发送到post中。</code></pre><h2 id="2、主题"><a href="#2、主题" class="headerlink" title="2、主题"></a>2、主题</h2><h3 id="1-更换主题"><a href="#1-更换主题" class="headerlink" title="1.更换主题"></a>1.更换主题</h3><pre><code>如果觉得默认的landscape主题不好看，那么可以在官网的主题中，选择你喜欢的一个主题下载，然后进行修改就可以了。进入到博客目录执行如下命令，含义是克隆该主题并存入到博客文件夹下的thems文件下里git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia执行后就会在博客目录文件夹的themes中可以找到有yilia的文件。找到博客根目录下的_config.yml文件，修改里面的配置将theme 修改为theme: yilia，需要注意的是冒号后有空格进入yilia这个文件夹，可以看到里面也有一个配置文件_config.yml，这个配置文件是修改你整个主题的配置文件。</code></pre><h3 id="2-menu-菜单栏"><a href="#2-menu-菜单栏" class="headerlink" title="2.menu(菜单栏)"></a>2.menu(菜单栏)</h3><pre><code>也即是如下图所示的这些东西：</code></pre><p><img src="https://i.imgur.com/LeIG3lQ.png" alt></p><pre><code>其中，About这个你是找不到网页的，因为你的文章中没有about这个东西。如果你想要的话，可以执行命令：hexo new page about它就会在根目录下source文件夹中新建了一个about文件夹，以及index.md，在index.md中写上你想要写的东西，就可以在网站上展示出来了。如果你想要自己再自定义一个菜单栏的选项，那么就：hexo new page yourdiy然后在主题配置文件的menu菜单栏添加一个 Yourdiy : /yourdiy，注意冒号后面要有空格，以及前面的空格要和menu中默认的保持整齐。然后在languages文件夹中，找到zh-CN.yml，在index中添加yourdiy: &apos;中文意思&apos;就可以显示中文了。</code></pre><h3 id="3-customize-定制"><a href="#3-customize-定制" class="headerlink" title="3.customize(定制)"></a>3.customize(定制)</h3><pre><code>可以修改你的个人logo，默认是那个yilia，在source/css/images文件夹中放入自己要的logo，再改一下url的链接名字就可以了。favicon是网站中出现的那个小图标的icon，找一张你喜欢的logo，然后转换成ico格式，放在images文件夹下，配置一下路径就行。social_links ，可以显示你的社交链接，而且是有logo的。</code></pre><h3 id="4-添加RSS"><a href="#4-添加RSS" class="headerlink" title="4.添加RSS"></a>4.添加RSS</h3><pre><code>1. 先安装RSS插件: npm i hexo-generator-feed2. 而后在你整个项目的_config.yml中找到Extensions，添加：    # Extensions     ## Plugins: https://hexo.io/plugins/     #RSS订阅     plugin:     - hexo-generator-feed     #Feed Atom     feed:         type: atom         path: atom.xml         limit: 20</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第二部分&quot;&gt;&lt;a href=&quot;#第二部分&quot; class=&quot;headerlink&quot; title=&quot;第二部分&quot;&gt;&lt;/a&gt;第二部分&lt;/h2&gt;&lt;h2 id=&quot;1、hexo基本配置&quot;&gt;&lt;a href=&quot;#1、hexo基本配置&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo搭建教程(1)</title>
    <link href="https://yongnights.github.io/2019/03/06/Hexo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B-1/"/>
    <id>https://yongnights.github.io/2019/03/06/Hexo搭建教程-1/</id>
    <published>2019-03-06T06:08:27.000Z</published>
    <updated>2019-03-06T06:13:34.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简要说明"><a href="#简要说明" class="headerlink" title="简要说明"></a>简要说明</h2><ul><li><p>在市面上的博客很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜索的到。缺点是比较不自由，会受到平台的各种限制和恶心的广告。 </p></li><li><p>而自己购买域名和服务器，搭建博客的成本实在是太高了，不光是说这些购买成本，单单是花力气去自己搭这么一个网站，还要定期的维护它，对于我们大多数人来说，实在是没有这样的精力和时间。</p></li><li><p>那么就有第三种选择，直接在github page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。</p></li><li><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。</p></li><li><p>Hexo 使用 Markdown（或其他渲染引擎）解析文章，并且使用json来进行数据储存，完全不需要数据库来储存数据，在几秒内，即可利用靓丽的主题生成静态网页。因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p></li></ul><h2 id="教程分三个部分："><a href="#教程分三个部分：" class="headerlink" title="教程分三个部分："></a>教程分三个部分：</h2><ul><li>第一部分：hexo的初级搭建,部署到github page上，以及个人域名的绑定。</li><li>第二部分：hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流</li><li>第三部分：hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简要说明&quot;&gt;&lt;a href=&quot;#简要说明&quot; class=&quot;headerlink&quot; title=&quot;简要说明&quot;&gt;&lt;/a&gt;简要说明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在市面上的博客很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo搭建教程(2)</title>
    <link href="https://yongnights.github.io/2019/03/06/Hexo%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B-2/"/>
    <id>https://yongnights.github.io/2019/03/06/Hexo搭建教程-2/</id>
    <published>2019-03-06T06:07:52.000Z</published>
    <updated>2019-03-06T06:22:42.023Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h2><h3 id="hexo搭建步骤"><a href="#hexo搭建步骤" class="headerlink" title="hexo搭建步骤"></a>hexo搭建步骤</h3><ol><li>安装Git</li><li>安装Node.js</li><li>安装Hexo</li><li>GitHub创建个人仓库</li><li>生成SSH添加到GitHub</li><li>将hexo部署到GitHub</li><li>设置个人域名</li><li>发布文章</li></ol><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><pre><code>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。windows：到git官网上下载,下载安装后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。linux：因为最早的git就是在linux上编写的，只需要一行代码：yum install git (apt-get install git)安装好后，用git --version 来查看一下版本</code></pre><p><img src="https://i.imgur.com/cr1thaV.png" alt></p><pre><code>注意:一定要安装最新的版本，否则到后面使用git时会有如下错误情况：错误提示：fatal: unable to access &apos;https://github.com/litten/hexo-theme-yilia.git/&apos;: error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version错误分析：github 2月1日发了个公告Weak cryptographic standards removal notice，简而言之就是不支持TLSv1/TLSv1.1解决办法：第一种：更新git和tortoisegit至最新版第二种：检查TLS版本，git config http.sslVersion如果是tlsv1.0，则用下面一句命令行更新至tlsv1.2git config --global http.sslVersion tlsv1.2</code></pre><h3 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2.安装nodejs"></a>2.安装nodejs</h3><pre><code>Hexo是基于nodejs编写的，需要安装一下nodejs和里面的npm工具。windows：nodejs选择LTS版本就行了。linux：yum install nodejs &amp;&amp; yum install npm    或者：sudo apt-get install nodejs         sudo apt-get install npm安装完后，打开命令行，检查一下有没有安装成功node -vnpm -v</code></pre><p><img src="https://i.imgur.com/U0SjRFv.png" alt></p><h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h3><pre><code>前面git和nodejs安装好后，就可以安装hexo了。你可以先创建一个文件夹my-blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。安装Hexo脚手架工具，输入命令：npm install -g hexo-cli用hexo -v查看一下版本</code></pre><p><img src="https://i.imgur.com/OhqQ3nR.png" alt></p><pre><code>至此所需要的软件就全部安装完了。接下来初始化一下hexo： $ hexo init my-blog # 创建并初始化博客目录$ cd my-blog        # 进入该博客目录$ npm install       # 创建默认博客文件新建完成后，指定文件夹目录下有：myblog├── node_modules  #依赖包├── public        #存放生成的页面├── scaffolds     #生成文章的一些模板├── source        #用来存放你的文章|   ├── _drafts   #草稿目录|   └── _posts    #发布的文章目录└── themes        #主题├── _config.yml   #博客配置文件├── package.json  #模块和依赖项个别文件说明：1、 _config.yml网站主题的的配置文件，和github page关联和切换主题时，需要使用到    # Hexo Configuration    ## Docs: https://hexo.io/docs/configuration.html    ## Source: https://github.com/hexojs/hexo/    # Site    title: 网站标题如：Minstorm-blog    subtitle: 网站副标题：Minstorm    description: 网站描述：Minstorm:a blog for tech    author: 网站作者：De scherpe    language: 网站的语言    timezone: 网站的时间去，默认使用的是电脑的时区    # URL    ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;    url: 网站地址    root: 网站根目录,建议是用&apos;/&apos;    permalink: 文章的y永久链接格式，默认就好 :year/:month/:day/:title/    permalink_defaults: 永久链接中各部分的默认值，不用填    # Directory    source_dir:资源文件夹，存放文章用的：source    public_dir: 公共文件夹，用来存放编译之后的文件：public    tag_dir: 标签文件夹：tags    archive_dir: 归档文件夹，也就是你的全部文章生成的目录：archives    category_dir: 分类文件夹：categories    code_dir: Include code文件夹：downloads/code    i18n_dir: 国际化（i18n）文件夹:lang    skip_render: 需要跳过渲染的文件存放的文件夹    # Writing    new_post_name: :title.md # File name of new posts    default_layout: 默认文章样式：post    titlecase: false # Transform title into titlecase    external_link: true # Open external links in new tab    filename_case: 0    render_drafts: false    post_asset_folder: false    relative_link: false    future: true    highlight:      enable: true       line_number: true      auto_detect: false      tab_replace:    # Home page setting    # path: Root path for your blogs index page. (default = &apos;&apos;)    # per_page: Posts displayed per page. (0 = disable pagination)    # order_by: Posts order. (Order by date descending by default)    index_generator:      path: &apos;&apos;      per_page: 每一页显示的文章：10      order_by: -date    # Category &amp; Tag    default_category: uncategorized    category_map:    tag_map:    # Date / Time format    ## Hexo uses Moment.js to parse and display date    ## You can customize the date format as defined in    ## http://momentjs.com/docs/#/displaying/format/    date_format: YYYY-MM-DD    time_format: HH:mm:ss    # Pagination    ## Set per_page to 0 to disable pagination    per_page: 10    pagination_dir: page    # Extensions    ## Plugins: https://hexo.io/plugins/    ## Themes: https://hexo.io/themes/    theme: 主题：indigo    # Deployment    ## Docs: https://hexo.io/docs/deployment.html    deploy: # 同步使用      type: 接下来开启服务编译生成静态网页文件，执行如下命令：$ hexo generate可以简写为$ hexo g注意，如下图才是命令正确执行，否则按照提示解决错误</code></pre><p><img src="https://i.imgur.com/ra9wXhX.png" alt></p><pre><code>本地预览文章，执行如下命令：$ hexo server 可以简写为$ hexo s如果需要预览draft文件夹下面的文件，需要在后面加上--draft参数$ hexo s --draft</code></pre><p><img src="https://i.imgur.com/vmdZ0fv.png" alt></p><pre><code>在执行hexo s 后，会出现一个网址http://localhost:4000/，将其复制(需要注意的是，在cmd中不可用ctrl + c 来复制，Ctrl + C为停止命令）。打开该网址后，可以看到网站的雏形，使用ctrl+c可以把服务关掉。注：以上的操作实现的效果如下:    - 运行服务后，可以在本地预览博客。    - 接下来的操作是把博客文件给推送到GitHub上，使用GitHub提供的域名访问博客</code></pre><h3 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4.GitHub创建个人仓库"></a>4.GitHub创建个人仓库</h3><pre><code>首先注册一个GitHub账户(注意：用户名跟你的博客域名有关，请慎重取名)注册完登录后，在GitHub.com中看到一个New repository，新建仓库。需要创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxx.github.io，其中xxx就是你注册GitHub的用户名。</code></pre><p><img src="https://i.imgur.com/8Pbc8Ic.png" alt></p><h3 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5.生成SSH添加到GitHub"></a>5.生成SSH添加到GitHub</h3><pre><code>回到你的git bash中，输入如下两条命令：git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。可以用以下两条，检查一下你有没有输对：git config user.namegit config user.email然后创建SSH,一路回车ssh-keygen -t rsa -C &quot;youremail&quot;youremail是你注册GitHub的邮箱这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key，把你的id_rsa.pub里面的信息复制进去。</code></pre><p><img src="https://i.imgur.com/uPTCxKK.png" alt></p><pre><code>在gitbash中，查看是否成功ssh -T git@github.com</code></pre><p><img src="https://i.imgur.com/D7DzK0d.png" alt></p><h3 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6.将hexo部署到GitHub"></a>6.将hexo部署到GitHub</h3><pre><code>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上。需要用到hexo的GitHub插件hexo-deployer-git，首先用npm下载这个插件$ npm install hexo-deployer-git --save然后打开站点配置文件_config.yml，翻到最后，修改为YourgithubName就是你的GitHub账户deploy:  type: git  repo: git@github.com:用户名/用户名.github.io.git   branch: master配置好了deploy之后，就可以运行以下命令上传项目了hexo cleanhexo generatehexo deploy其中 hexo clean清除了你之前生成的东西，也可以不加。hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写hexo deploy 部署文章，可以用hexo d缩写注意deploy时可能要你输入username和password。得到下图就说明部署成功了，过一会儿就可以在https://yourname.github.io 这个网站看到你的博客了！</code></pre><p><img src="https://i.imgur.com/GVxDqDd.png" alt></p><h3 id="7-设置个人域名"><a href="#7-设置个人域名" class="headerlink" title="7.设置个人域名"></a>7.设置个人域名</h3><pre><code>现在你的个人网站的地址是 yourname.github.io，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。注册一个阿里云账户,在阿里云上买一个域名，先去进行实名认证,然后在域名控制台中，看到你购买的域名。点解析进去，添加解析记录类型选A或CNAME，A记录的记录值就是ip地址，github(官方文档)提供了两个IP地址，192.30.252.153和192.30.252.154，这两个IP地址为github的服务器地址，两个都要填上，解析记录设置两个@，线路就默认就行了，CNAME记录值填你的github博客网址。如下图所示：</code></pre><p><img src="https://i.imgur.com/Mgj88RX.png" alt></p><pre><code>注意，解析线路选择默认，(解析线路:境外是后面来做国内外分流用的,在后面会讲到)。记得现在选择默认！登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的网站地址</code></pre><p><img src="https://i.imgur.com/xRs9XZG.png" alt></p><pre><code>顺便再勾选上强制使用https，&quot;Enforce HTTPS&quot; 然后在你的博客文件根目录的source中创建一个名为CNAME文件，不要后缀。写上你的网站地址。</code></pre><p><img src="https://i.imgur.com/c6iAOKb.png" alt> </p><pre><code>最后，在gitbash中，输入hexo cleanhexo ghexo d稍等一会儿，再打开你的浏览器，输入你自己的网站地址(使用https的方式)，就可以看到搭建的网站啦！总结，GitHub上面的配置和CNAME里面的设置互相结合，有如下几种方式：</code></pre><p><img src="https://i.imgur.com/We1CT5T.png" alt></p><pre><code>接下来你就可以正式开始写文章了。使用命令行工具创建一篇文章$ hexo new [layout] &lt;title&gt;layout是文章的布局，默认是post布局&lt;title&gt; 是文章名称例如：hexo new post &apos;我的第一篇文章&apos;hexo还有一个文件夹是草稿文件夹_draft，可以用理解成私密文章的功能，只要有不想显示的文章但是又不想删除，就可以把文章拖进去_draft文件夹就可以实现隐藏的功能了，也可以用hexo的命令将文章放到草稿文件夹$ hexo publish &lt;layout&gt; &lt;filename&gt;然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再hexo cleanhexo ghexo d就可以看到更新了。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;第一部分&quot;&gt;&lt;a href=&quot;#第一部分&quot; class=&quot;headerlink&quot; title=&quot;第一部分&quot;&gt;&lt;/a&gt;第一部分&lt;/h2&gt;&lt;h3 id=&quot;hexo搭建步骤&quot;&gt;&lt;a href=&quot;#hexo搭建步骤&quot; class=&quot;headerlink&quot; title=&quot;h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>first</title>
    <link href="https://yongnights.github.io/2019/03/06/first/"/>
    <id>https://yongnights.github.io/2019/03/06/first/</id>
    <published>2019-03-06T05:08:29.000Z</published>
    <updated>2019-03-06T05:09:29.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简要说明"><a href="#简要说明" class="headerlink" title="简要说明"></a>简要说明</h2><pre><code>在市面上的博客很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜索的到。缺点是比较不自由，会受到平台的各种限制和恶心的广告。 而自己购买域名和服务器，搭建博客的成本实在是太高了，不光是说这些购买成本，单单是花力气去自己搭这么一个网站，还要定期的维护它，对于我们大多数人来说，实在是没有这样的精力和时间。那么就有第三种选择，直接在github page平台上托管我们的博客。这样就可以安心的来写作，又不需要定期维护，而且hexo作为一个快速简洁的博客框架，用它来搭建博客真的非常容易。Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，并且使用json来进行数据储存，完全不需要数据库来储存数据，在几秒内，即可利用靓丽的主题生成静态网页。因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</code></pre><p>##教程分三个部分：   </p><ul><li>第一部分：hexo的初级搭建还有部署到github page上，以及个人域名的绑定。</li><li>第二部分：hexo的基本配置，更换主题，实现多终端工作，以及在coding page部署实现国内外分流</li><li>第三部分：hexo添加各种功能，包括搜索的SEO，阅读量统计，访问量统计和评论系统等。</li></ul><h2 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h2><h4 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h4><pre><code>1.安装Git2.安装Node.js3.安装Hexo4.GitHub创建个人仓库5.生成SSH添加到GitHub6.将hexo部署到GitHub7.设置个人域名8.发布文章</code></pre><h3 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h3><pre><code>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。windows：到git官网上下载,下载安装后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。linux：因为最早的git就是在linux上编写的，只需要一行代码：yum install git (apt-get install git)安装好后，用git --version 来查看一下版本</code></pre><p><img src="https://i.imgur.com/cr1thaV.png" alt></p><pre><code>注意一定要安装最新的版本，否则到后面使用git时会有如下错误情况：错误提示：fatal: unable to access &apos;https://github.com/litten/hexo-theme-yilia.git/&apos;: error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version错误分析：github 2月1日发了个公告Weak cryptographic standards removal notice，简而言之就是不支持TLSv1/TLSv1.1解决办法：第一种：更新git和tortoisegit至最新版第二种：检查TLS版本，git config http.sslVersion如果是tlsv1.0，则用下面一句命令行更新至tlsv1.2git config --global http.sslVersion tlsv1.2</code></pre><h3 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2.安装nodejs"></a>2.安装nodejs</h3><pre><code>Hexo是基于nodejs编写的，需要安装一下nodejs和里面的npm工具。windows：nodejs选择LTS版本就行了。linux：yum install nodejs &amp;&amp; yum install npm    或者：sudo apt-get install nodejs         sudo apt-get install npm安装完后，打开命令行，检查一下有没有安装成功node -vnpm -v</code></pre><p><img src="https://i.imgur.com/U0SjRFv.png" alt></p><h3 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3.安装hexo"></a>3.安装hexo</h3><pre><code>前面git和nodejs安装好后，就可以安装hexo了。你可以先创建一个文件夹my-blog，然后cd到这个文件夹下（或者在这个文件夹下直接右键git bash打开）。安装Hexo脚手架工具，输入命令：npm install -g hexo-cli用hexo -v查看一下版本</code></pre><p><img src="https://i.imgur.com/OhqQ3nR.png" alt></p><pre><code>至此所需要的软件就全部安装完了。接下来初始化一下hexo： $ hexo init my-blog # 创建并初始化博客目录$ cd my-blog        # 进入该博客目录$ npm install       # 创建默认博客文件新建完成后，指定文件夹目录下有：myblog├── node_modules  #依赖包├── public        #存放生成的页面├── scaffolds     #生成文章的一些模板├── source        #用来存放你的文章|   ├── _drafts   #草稿目录|   └── _posts    #发布的文章目录└── themes        #主题├── _config.yml   #博客配置文件├── package.json  #模块和依赖项个别文件说明：1、 _config.yml网站主题的的配置文件，和github page关联和切换主题时，需要使用到    # Hexo Configuration    ## Docs: https://hexo.io/docs/configuration.html    ## Source: https://github.com/hexojs/hexo/    # Site    title: 网站标题如：Minstorm-blog    subtitle: 网站副标题：Minstorm    description: 网站描述：Minstorm:a blog for tech    author: 网站作者：De scherpe    language: 网站的语言    timezone: 网站的时间去，默认使用的是电脑的时区    # URL    ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;    url: 网站地址    root: 网站根目录,建议是用&apos;/&apos;    permalink: 文章的y永久链接格式，默认就好 :year/:month/:day/:title/    permalink_defaults: 永久链接中各部分的默认值，不用填    # Directory    source_dir:资源文件夹，存放文章用的：source    public_dir: 公共文件夹，用来存放编译之后的文件：public    tag_dir: 标签文件夹：tags    archive_dir: 归档文件夹，也就是你的全部文章生成的目录：archives    category_dir: 分类文件夹：categories    code_dir: Include code文件夹：downloads/code    i18n_dir: 国际化（i18n）文件夹:lang    skip_render: 需要跳过渲染的文件存放的文件夹    # Writing    new_post_name: :title.md # File name of new posts    default_layout: 默认文章样式：post    titlecase: false # Transform title into titlecase    external_link: true # Open external links in new tab    filename_case: 0    render_drafts: false    post_asset_folder: false    relative_link: false    future: true    highlight:      enable: true       line_number: true      auto_detect: false      tab_replace:    # Home page setting    # path: Root path for your blogs index page. (default = &apos;&apos;)    # per_page: Posts displayed per page. (0 = disable pagination)    # order_by: Posts order. (Order by date descending by default)    index_generator:      path: &apos;&apos;      per_page: 每一页显示的文章：10      order_by: -date    # Category &amp; Tag    default_category: uncategorized    category_map:    tag_map:    # Date / Time format    ## Hexo uses Moment.js to parse and display date    ## You can customize the date format as defined in    ## http://momentjs.com/docs/#/displaying/format/    date_format: YYYY-MM-DD    time_format: HH:mm:ss    # Pagination    ## Set per_page to 0 to disable pagination    per_page: 10    pagination_dir: page    # Extensions    ## Plugins: https://hexo.io/plugins/    ## Themes: https://hexo.io/themes/    theme: 主题：indigo    # Deployment    ## Docs: https://hexo.io/docs/deployment.html    deploy: # 同步使用      type: 接下来开启服务编译生成静态网页文件，执行如下命令：$ hexo generate可以简写为$ hexo g注意，如下图才是命令正确执行，否则按照提示解决错误</code></pre><p><img src="https://i.imgur.com/ra9wXhX.png" alt></p><pre><code>本地预览文章，执行如下命令：$ hexo server 可以简写为$ hexo s如果需要预览draft文件夹下面的文件，需要在后面加上--draft参数$ hexo s --draft</code></pre><p><img src="https://i.imgur.com/vmdZ0fv.png" alt></p><pre><code>在执行hexo s 后，会出现一个网址http://localhost:4000/，将其复制(需要注意的是，在cmd中不可用ctrl + c 来复制，Ctrl + C为停止命令）。打开该网址后，可以看到网站的雏形，使用ctrl+c可以把服务关掉。注：以上的操作实现的效果如下，运行服务后，可以在本地预览博客。接下来的操作是把博客文件给推送到GitHub上，使用GitHub提供的域名访问博客</code></pre><h3 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4.GitHub创建个人仓库"></a>4.GitHub创建个人仓库</h3><pre><code>首先注册一个GitHub账户(注意：用户名跟你的博客域名有关，请慎重取名)注册完登录后，在GitHub.com中看到一个New repository，新建仓库。需要创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxx.github.io，其中xxx就是你注册GitHub的用户名。</code></pre><p><img src="https://i.imgur.com/8Pbc8Ic.png" alt></p><h3 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5.生成SSH添加到GitHub"></a>5.生成SSH添加到GitHub</h3><pre><code>回到你的git bash中，输入如下两条命令：git config --global user.name &quot;yourname&quot;git config --global user.email &quot;youremail&quot;这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。可以用以下两条，检查一下你有没有输对：git config user.namegit config user.email然后创建SSH,一路回车ssh-keygen -t rsa -C &quot;youremail&quot;youremail是你注册GitHub的邮箱这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。而后在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key，把你的id_rsa.pub里面的信息复制进去。</code></pre><p><img src="https://i.imgur.com/uPTCxKK.png" alt></p><pre><code>在gitbash中，查看是否成功ssh -T git@github.com</code></pre><p><img src="https://i.imgur.com/D7DzK0d.png" alt></p><h3 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6.将hexo部署到GitHub"></a>6.将hexo部署到GitHub</h3><pre><code>这一步，我们就可以将hexo和GitHub关联起来，也就是将hexo生成的文章部署到GitHub上。需要用到hexo的GitHub插件hexo-deployer-git，首先用npm下载这个插件$ npm install hexo-deployer-git --save然后打开站点配置文件_config.yml，翻到最后，修改为YourgithubName就是你的GitHub账户deploy:  type: git  repo: git@github.com:用户名/用户名.github.io.git   branch: master配置好了deploy之后，就可以运行以下命令上传项目了hexo cleanhexo generatehexo deploy其中 hexo clean清除了你之前生成的东西，也可以不加。hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写hexo deploy 部署文章，可以用hexo d缩写注意deploy时可能要你输入username和password。得到下图就说明部署成功了，过一会儿就可以在https://yourname.github.io 这个网站看到你的博客了！</code></pre><p><img src="https://i.imgur.com/GVxDqDd.png" alt></p><h3 id="7-设置个人域名"><a href="#7-设置个人域名" class="headerlink" title="7.设置个人域名"></a>7.设置个人域名</h3><pre><code>现在你的个人网站的地址是 yourname.github.io，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。注册一个阿里云账户,在阿里云上买一个域名，先去进行实名认证,然后在域名控制台中，看到你购买的域名。点解析进去，添加解析。其中，192.30.252.153 和 192.30.252.154 是GitHub的服务器地址。注意，解析线路选择默认，不要像我一样选境外。这个境外是后面来做国内外分流用的,在后面的博客中会讲到。记得现在选择默认！</code></pre><p><img src="https://i.imgur.com/OekPLN5.png" alt></p><pre><code>登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名</code></pre><p><img src="https://i.imgur.com/GfAToQJ.png" alt></p><pre><code>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名。</code></pre><p><img src="https://i.imgur.com/qvWVE17.png" alt>    </p><pre><code>最后，在gitbash中，输入hexo cleanhexo ghexo d稍等一会儿，再打开你的浏览器，输入你自己的域名，就可以看到搭建的网站啦！接下来你就可以正式开始写文章了。使用命令行工具创建一篇文章$ hexo new [layout] &lt;title&gt;layout是文章的布局，默认是post布局&lt;title&gt; 是文章名称例如：hexo new post &apos;我的第一篇文章&apos;hexo还有一个文件夹是草稿文件夹_draft，可以用理解成私密文章的功能，只要有不想显示的文章但是又不想删除，就可以把文章拖进去_draft文件夹就可以实现隐藏的功能了，也可以用hexo的命令将文章放到草稿文件夹$ hexo publish &lt;layout&gt; &lt;filename&gt;然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再hexo cleanhexo ghexo d就可以看到更新了。</code></pre><h2 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简要说明&quot;&gt;&lt;a href=&quot;#简要说明&quot; class=&quot;headerlink&quot; title=&quot;简要说明&quot;&gt;&lt;/a&gt;简要说明&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;在市面上的博客很多，如CSDN，博客园，简书等平台，可以直接在上面发表，用户交互做的好，写的文章百度也能搜索
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>step</title>
    <link href="https://yongnights.github.io/2019/03/05/step/"/>
    <id>https://yongnights.github.io/2019/03/05/step/</id>
    <published>2019-03-05T10:45:16.000Z</published>
    <updated>2019-03-05T11:08:33.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1说明"><a href="#1说明" class="headerlink" title="1说明"></a>1说明</h1><pre><code>博客是使用markdown文件来解析的，并且使用json来进行数据储存，完全不需要数据库来储存数据，文档也是比较完善，hexo官方的插件也很多，可以满足大部分的需求</code></pre><h1 id="2-安装Node"><a href="#2-安装Node" class="headerlink" title="2.安装Node"></a>2.安装Node</h1><pre><code>首先，你要安装好Node，hexo需要用到Node的NPM（一个资源库管理工具）工具，如果没有安装过node的可以去Node官网下载，安装完了用cmd命令查看node的版本： $ node -v如果出现以下信息，说明安装成功v10.15.2</code></pre><h1 id="3-安装Git"><a href="#3-安装Git" class="headerlink" title="3.安装Git"></a>3.安装Git</h1><pre><code>当安装完Node之后，需要安装Git客户端，进入官网安装，安装完了可以用cmd命令查看Git的版本$ git --version如果出现以下信息，说明安装成功git version 1.9.0.msysgit.0</code></pre><h1 id="4-安装Hexo脚手架工具"><a href="#4-安装Hexo脚手架工具" class="headerlink" title="4.安装Hexo脚手架工具"></a>4.安装Hexo脚手架工具</h1><pre><code>如果Git跟Node都安装完成了之后，就开始进入正式环节了！！！，首先，执行以下命令安装Hexo脚手架工具$ npm install -g hexo-cli</code></pre><h1 id="5-建立自己的博客"><a href="#5-建立自己的博客" class="headerlink" title="5.建立自己的博客"></a>5.建立自己的博客</h1><pre><code>$ hexo init my-blog # 创建并初始化博客目录$ cd my-blog        # 进入该博客目录$ npm install       # 创建博客文件    部署完了博客网站之后，可以看到整个博客网站的目录如下.├── _config.yml #博客配置文件├── package.json #模块和依赖项├── scaffolds├── source  #文章|   ├── _drafts #草稿目录|   └── _posts #发布的文章目录└── themes #主题</code></pre><h1 id="6-文件说明"><a href="#6-文件说明" class="headerlink" title="6.文件说明"></a>6.文件说明</h1><p>###6.1 _config.yml<br>    网站主题的的配置文件，和github page关联和切换主题时，需要使用到</p><pre><code># Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: 网站标题如：Minstorm-blogsubtitle: 网站副标题：Minstormdescription: 网站描述：Minstorm:a blog for techauthor: 网站作者：De scherpelanguage: 网站的语言timezone:   网站的时间去，默认使用的是电脑的时区# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: 网站地址：https://scherpe.github.io/blog/root: 网站根目录,建议是用&apos;/&apos;permalink: 文章的y永久链接格式，默认就好 :year/:month/:day/:title/permalink_defaults: 永久链接中各部分的默认值，不用填# Directorysource_dir:资源文件夹，存放文章用的：sourcepublic_dir: 公共文件夹，用来存放编译之后的文件：publictag_dir: 标签文件夹：tagsarchive_dir: 归档文件夹，也就是你的全部文章生成的目录：archivescategory_dir: 分类文件夹：categoriescode_dir: Include code文件夹：downloads/codei18n_dir: 国际化（i18n）文件夹:langskip_render: 需要跳过渲染的文件存放的文件夹# Writingnew_post_name: :title.md # File name of new postsdefault_layout: 默认文章样式：posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight:  enable: true   line_number: true  auto_detect: false  tab_replace:# Home page setting# path: Root path for your blogs index page. (default = &apos;&apos;)# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator:  path: &apos;&apos;  per_page: 每一页显示的文章：10  order_by: -date# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: 主题：indigo# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repository: https://github.com/scherpe/blog.git  branch: master</code></pre><p>###6.2 package.json</p><pre><code>{  &quot;name&quot;: &quot;hexo-site&quot;,  &quot;version&quot;: &quot;1.0.0&quot;,  &quot;private&quot;: true,  &quot;hexo&quot;: {    &quot;version&quot;: &quot;3.4.4&quot;  },  &quot;dependencies&quot;: {    &quot;hexo&quot;: &quot;^3.2.0&quot;,    &quot;hexo-asset-image&quot;: &quot;^0.0.3&quot;,    &quot;hexo-deployer-git&quot;: &quot;^0.3.1&quot;,    &quot;hexo-generator-archive&quot;: &quot;^0.1.4&quot;,    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,    &quot;hexo-generator-feed&quot;: &quot;^1.2.2&quot;,    &quot;hexo-generator-index&quot;: &quot;^0.2.0&quot;,    &quot;hexo-generator-json-content&quot;: &quot;^3.0.1&quot;,    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,    &quot;hexo-helper-qrcode&quot;: &quot;^1.0.2&quot;,    &quot;hexo-qiniu-sync&quot;: &quot;^1.4.7&quot;,    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.0&quot;,    &quot;hexo-renderer-less&quot;: &quot;^0.2.0&quot;,    &quot;hexo-renderer-marked&quot;: &quot;^0.3.0&quot;,    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.1&quot;,    &quot;hexo-server&quot;: &quot;^0.2.0&quot;,    &quot;valine&quot;: &quot;^1.1.9-beta3&quot;  }}</code></pre><h1 id="7-写作"><a href="#7-写作" class="headerlink" title="7.写作"></a>7.写作</h1><pre><code>使用命令行工具创建一篇文章$ hexo new [layout] &lt;title&gt;# layout是文章的布局，默认是post布局# 例如：hexo new post &apos;我的第一篇文章&apos;hexo还有一个文件夹是草稿文件夹_draft，可以用理解成私密文章的功能，只要有不想显示的文章但是又不想删除，就可以把文章拖进去_draft文件夹就可以实现隐藏的功能了，也可以用hexo的命令将文章放到草稿文件夹$ hexo publish &lt;layout&gt; &lt;filename&gt;</code></pre><h1 id="8-编译文章"><a href="#8-编译文章" class="headerlink" title="8.编译文章"></a>8.编译文章</h1><pre><code>写好文章的时候，需要预览一下，hexo的编译命令$ hexo generate可以简写为$ hexo g</code></pre><h1 id="9-预览文章"><a href="#9-预览文章" class="headerlink" title="9.预览文章"></a>9.预览文章</h1><pre><code>$ hexo server 可以简写为$ hexo s如果需要预览draft文件夹下面的文件，需要在后面加上--draft参数$ hexo s --draft</code></pre><h1 id="10-部署博客"><a href="#10-部署博客" class="headerlink" title="10.部署博客"></a>10.部署博客</h1><pre><code>当写完文章时，需要对文章编译然后上传，部署到GitHub仓库，我们去GitHub创建一个仓库然后开启GitHubPage</code></pre><p><img src="https://i.imgur.com/007Kg4h.jpg" alt></p><h1 id="11-开启GitHub-Page"><a href="#11-开启GitHub-Page" class="headerlink" title="11.开启GitHub Page"></a>11.开启GitHub Page</h1><pre><code>你会看到蓝色自己写着xxx.github.io/项目名，这个就是线上能访问你项目的地址</code></pre><p><img src="https://i.imgur.com/K2htiT6.jpg" alt></p><pre><code>若是感觉这个域名太长太难记了，可以去设置自定义的域名，如果你有域名的话可以进入管理控制台里面的dnsj解析那里设置新建一个解析</code></pre><p><img src="https://i.imgur.com/u3M938b.jpg" alt></p><pre><code>记录类型选CNAME，主机记录可以写你喜欢的名称，解析线路默认的就行了，记录值需要填写你的GitHub的个人主页，格式是你的GitHub名称.github.io，记住不能写http或者https，然后点击确定。接下来就在GitHubpage那里写上刚刚设置好的值设置好域名之后，在source文件夹下面新建一个CNAME文件，然后写入以下的内容您设置的域名,例如：blog.minstorm.cn</code></pre><h1 id="12-上传项目"><a href="#12-上传项目" class="headerlink" title="12.上传项目"></a>12.上传项目</h1><pre><code>要上传项目，需要用到hexo的GitHub插件hexo-deployer-git，首先用npm下载这个插件$ npm install hexo-deployer-git --save然后在_config.yml增加以下配置deploy:  type: git  repo: &lt;repository url&gt;  branch: [branch]  message: [message]刚配置好了deploy之后，就可以运行以下命令上传项目了$ hexo d</code></pre><h1 id="13-开启服务"><a href="#13-开启服务" class="headerlink" title="13.开启服务"></a>13.开启服务</h1><pre><code>$ hexo g注意，如下图才是命令正确执行，否则按照提示解决错误</code></pre><p><img src="https://i.imgur.com/ra9wXhX.png" alt></p><pre><code>$ hexo s</code></pre><p><img src="https://i.imgur.com/vmdZ0fv.png" alt></p><pre><code>在执行hexo s 后，会出现一个网址http://localhost:4000/，将其复制（需要注意的是，在cmd中不可用ctrl + c 来复制，Ctrl + C为停止命令）。打开该网址后，可以看到网站的雏形。</code></pre><h1 id="错误集锦"><a href="#错误集锦" class="headerlink" title="错误集锦"></a>错误集锦</h1><h4 id="错误类型1"><a href="#错误类型1" class="headerlink" title="错误类型1"></a>错误类型1</h4><pre><code>错误描述:FATAL end of the stream or a document separator is expected at line 10, column 9错误说明:缺少分隔符，一般都是因为缺少空格解决方案:出现这种情况，一般都是缺少空格，在:冒号之后要有空格！检查x行y列附近的冒号，其之后是否跟了空格。</code></pre><h4 id="错误类型2"><a href="#错误类型2" class="headerlink" title="错误类型2"></a>错误类型2</h4><pre><code>错误描述:ValidationError: ‘null’ is not a string!错误说明:一般都是因为文章无内容，可能是因为在这篇博客文章中，有某些属性没有填写，比如author属性，tag属性，categories属性等，导致该属性是空的，即null，所以报错。友情提示：如果你是用MarkdownPad 2来进行博文写作（我就是），可能在打开该md文件之后，对文件名进行了修改，导致出现了两篇文章。就会出现错误。解决方案:既然是属性缺失，那就把为空的那个属性给补上.</code></pre><p>####错误类型3<br>    错误描述:generate的时候是没问题的，但是网页预览的时候，发现引用块有问题，原本引用块下方的内容跑到引用块里边去了！<br>    解决方案:引用块都是由一对三个<strong>所包起来的，如果在最后一个点</strong>之后有空格，界面会错乱，所以，把这个多余的空格去掉吧。</p><h1 id="自定义主题"><a href="#自定义主题" class="headerlink" title="自定义主题"></a>自定义主题</h1><p>####4.1、创建github仓库<br>    这里需要注意的是仓库名字前缀需要和Owner一致，如这里Owner为fuusy，那么我的仓库名为fuusy.github.io，前缀必须一致，后面就上github.io。<br>    （注意：用户名跟你的博客域名有关，请慎重取名）<br><img src="https://i.imgur.com/LwT0ojZ.jpg" alt></p><pre><code>新建成功后，复制ssh。后续修改_config.yml文件会用到。</code></pre><p><img src="https://i.imgur.com/dbw4xBn.jpg" alt></p><h4 id="4-2、切换主题"><a href="#4-2、切换主题" class="headerlink" title="4.2、切换主题"></a>4.2、切换主题</h4><pre><code>接着开始切换主题并且将文章上传到github上。以我的博客主题为例，我的主题为yilia，从github上克隆该主题。进入到博客目录执行如下命令，含义是克隆该主题并存入到博客文件夹下的thems文件下里git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia错误提示：fatal: unable to access &apos;https://github.com/litten/hexo-theme-yilia.git/&apos;: error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version错误分析：github 2月1日发了个公告Weak cryptographic standards removal notice，简而言之就是不支持TLSv1/TLSv1.1解决办法：第一种：更新git和tortoisegit至最新版第二种：检查TLS版本，git config http.sslVersion如果是tlsv1.0，则用下面一句命令行更新至tlsv1.2git config --global http.sslVersion tlsv1.2执行后就会在博客目录文件夹的themes中可以找到有yilia的文件。找到_config.yml文件，修改里面的配置将theme 修改为theme: yilia，需要注意的是冒号后有空格将deploy修改为：type:gitrepository: git@github.com:fuusy/fuusy.github.io.git branch: master</code></pre><h4 id="4-3、发布"><a href="#4-3、发布" class="headerlink" title="4.3、发布"></a>4.3、发布</h4><pre><code>接下来需要使用 Git bash 来进行命令的执行，在Test文件夹中右击鼠标，你会发现有Git bash 选项，点击进入。执行命令：npm install hexo-deployer-git --save最后就是发布了，执行以下命令：hexo ghexo d完成后，你就有属于自己的博客了，在github的setting中 可以看到自己的博客地址</code></pre><h1 id="GitHub篇"><a href="#GitHub篇" class="headerlink" title="GitHub篇"></a>GitHub篇</h1><pre><code>百度搜索github,进入官网注册。（注意：用户名跟你的博客域名有关，请慎重取名）选择free，点击start，验证邮箱，进入注册的邮箱，打开github给我们发送的邮件，点击验证链接，验证完成后点击start，创建仓库。仓库名必须为’用户名.github.io’创建好后我们来新建个文件，点击Create new file文件为index.html，内容为&lt;h1&gt;Hello Github Pages&lt;/h1&gt;复制你的仓库名————用户名.github.io在浏览器中粘贴，访问。看到如下页面（即使我们刚刚输入的内容）</code></pre><h1 id="Git篇"><a href="#Git篇" class="headerlink" title="Git篇"></a>Git篇</h1><pre><code>百度搜索git for windows，点击进入官网点击下载，下载好后确认安装，选择Use Windows的这个选项，我们就可以在cmd窗口中使用git命令github SSH Key 配置来到我们git for win的安装目录下，打开git-bash，输入ssh-keygen -t rsa -C “github的注册邮箱地址”，一路回车生成密钥，默认生成在C:\Users\用户名.ssh目录下面。接下来来到github官网，点击头像选择setting再点击SSH and GPG keys，选择右边的New SSH key标题可以自定义，找到我们生成的密钥(id_rsa.pub)，默认生成在C:\Users\用户名.ssh目录下面，拷贝到Key下</code></pre><h1 id="Hexo篇"><a href="#Hexo篇" class="headerlink" title="Hexo篇"></a>Hexo篇</h1><pre><code>先在本地新建个blog文件夹（随意），在cmd命令行进入到blog文件夹下。（win+R打开运行对话框，输入cmd打开命令行程序），heox主页上的就是安装命令（npm install hexo-cli -g），复制下来，在cmd从粘贴，回车确认命令，安装。安装需要时间，请耐心等待。安装成功后，运行初始化命令(hexo init blog)初始化好后，进入文件夹，输入命令安装依赖 npm install(安装需要时间，请耐心等待)（网好的请无视）若网络较差，可以使用淘宝镜像：命令:npm install -g cnpm –registry=https://registry.npm.taobao.org使用就是把npm改成cnpm即可。网好的作者这里继续使用npm安装完成后，输入hexo s -p 5555(在端口5555启动服务)在网页上输入localhost:5555预览一下（localhost表示本地访问）打开_config.yml文件，需要修改的地方有：网站名，介绍，关键字（这部分自己取），url(即是“http://用户名.github.io)。使用Ctrl+S保存文件.现在我们打开github获取仓库地址,点击头像-&gt;Your profile,点击对应的仓库,点击Clone or download，复制仓库地址,在_config.yml的最后找到deploy，输入如下内容（注意要有空格和缩进，不然会报错）deploy:     type:git    repository: git@github.com:用户名/用户名.github.io.git     branch: master接下来还需要安装git插件，命令 npm install hexo-deployer-git –save安装好后输入hexo g生成命令输入hexo d部署到github第一提交会提示您配置github的邮箱和用户名,在弹出的输入框中输入用户名，密码登录.显示出INFO Deploy done: git表示成功发布到github上在浏览器上输入 “用户名.github.io” 即可访问自己的博客</code></pre><h1 id="主题篇"><a href="#主题篇" class="headerlink" title="主题篇"></a>主题篇</h1><pre><code>在hexo官网的Themes（主题）下，搜索next，搜索结果点击跳转到github仓库，点击CN查看中文介绍，点击详细安装步骤，下载最新版本(git clone),拷贝到博客目录的themes下.打开_config.yml，修改 theme: next。注意是博客目录下的_config.yml，不是主题目录下的hexo g 重新生成一下hexo s -p 5555本地端口部署打开浏览器输入：localhost:5555，预览一下主题效果next支持多种外观,试着换一个外观模式，打开主题next下的_config.yml文件，注释第一个，显示第二个。再在浏览器上预览效果</code></pre><h1 id="发布新文章"><a href="#发布新文章" class="headerlink" title="发布新文章"></a>发布新文章</h1><pre><code>win+r快捷键，打开cmd命令行，进入文件所在的路径，$ hexo new title (title就是新建的文章的名字)然后在cmd中即可看到新建文章的路径（如上，在\Desktop\my_blog\source_posts\hello.md中），找到、编辑保存即可.md文件就是用markdown编辑的，hello文件就是保存图片的，其中hello.md中调用hello文件中的图片时使用相对路径</code></pre><h1 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h1><pre><code>hexo server上面命令在cmd命令行执行后，打开http://localhost:4000/，找到刚才编辑的文章，查看无误后执行下一步</code></pre><h1 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h1><pre><code>生成静态网页：hexo generate发布网站（推送到github或者gitee）：hexo deploy 也可简写为（一起执行上边两个命令）：hexo g -d 或 hexo d -g若看不到效果，可以先执行hexo clean,清除缓存文件 (db.json) 和已生成的静态文件 (public)然后再执行hexo g -d</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1说明&quot;&gt;&lt;a href=&quot;#1说明&quot; class=&quot;headerlink&quot; title=&quot;1说明&quot;&gt;&lt;/a&gt;1说明&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;博客是使用markdown文件来解析的，并且使用json来进行数据储存，完全不需要数据库来储存数据，文档也是比较完善
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yongnights.github.io/2019/03/05/hello-world/"/>
    <id>https://yongnights.github.io/2019/03/05/hello-world/</id>
    <published>2019-03-05T07:09:09.609Z</published>
    <updated>2017-10-28T00:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
